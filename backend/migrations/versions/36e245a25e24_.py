"""empty message

Revision ID: 36e245a25e24
Revises: a5b66490c83c
Create Date: 2025-07-02 19:50:12.081621

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '36e245a25e24'
down_revision = 'a5b66490c83c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dashboard_statistics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('statistic_date', sa.Date(), nullable=False),
    sa.Column('total_online_devices', sa.Integer(), nullable=True),
    sa.Column('total_offline_devices', sa.Integer(), nullable=True),
    sa.Column('total_error_devices', sa.Integer(), nullable=True),
    sa.Column('total_courses_delivered', sa.Integer(), nullable=True),
    sa.Column('total_tours_conducted', sa.Integer(), nullable=True),
    sa.Column('total_interactions', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('usage_rate', sa.String(length=10), nullable=True),
    sa.Column('is_offline', sa.Boolean(), nullable=True),
    sa.Column('has_error', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courseware',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education_settings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('equipment_id', sa.String(length=50), nullable=False),
    sa.Column('screen_sync_mode', sa.Enum('auto', 'manual', 'off'), nullable=True),
    sa.Column('ai_platform', sa.String(length=50), nullable=True),
    sa.Column('subject', sa.String(length=50), nullable=True),
    sa.Column('voice_type', sa.String(length=50), nullable=True),
    sa.Column('robot_action', sa.String(length=50), nullable=True),
    sa.Column('hand_recognition', sa.Boolean(), nullable=True),
    sa.Column('interactive_qa', sa.Boolean(), nullable=True),
    sa.Column('navigation_mode', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('equipment_id', sa.String(length=50), nullable=False),
    sa.Column('log_type', sa.Enum('error', 'warning', 'info', 'debug'), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('navigation_points',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('equipment_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('x_position', sa.Float(), nullable=False),
    sa.Column('y_position', sa.Float(), nullable=False),
    sa.Column('rotation', sa.Float(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('navigation_settings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('equipment_id', sa.String(length=50), nullable=False),
    sa.Column('scene_type', sa.String(length=50), nullable=True),
    sa.Column('ai_platform', sa.String(length=50), nullable=True),
    sa.Column('voice_type', sa.String(length=50), nullable=True),
    sa.Column('scene_prompt', sa.Text(), nullable=True),
    sa.Column('object_recognition', sa.Boolean(), nullable=True),
    sa.Column('recognition_action', sa.String(length=50), nullable=True),
    sa.Column('auto_follow', sa.Boolean(), nullable=True),
    sa.Column('patrol_mode', sa.String(length=50), nullable=True),
    sa.Column('navigation_mode', sa.String(length=50), nullable=True),
    sa.Column('emergency_alert', sa.Boolean(), nullable=True),
    sa.Column('alert_mode', sa.String(length=50), nullable=True),
    sa.Column('robot_speed', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operation_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # 首先添加允许为空的字段
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('real_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('role', sa.Enum('admin', 'operator', 'viewer'), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_login', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.Boolean(), nullable=True))
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=80),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('email'))
        batch_op.drop_column('is_active')
        batch_op.drop_column('email')

    # 更新现有记录的默认值
    from datetime import datetime
    connection = op.get_bind()
    connection.execute(
        sa.text("UPDATE users SET real_name = username WHERE real_name IS NULL")
    )
    connection.execute(
        sa.text("UPDATE users SET role = 'admin' WHERE role IS NULL")
    )
    connection.execute(
        sa.text("UPDATE users SET created_at = NOW() WHERE created_at IS NULL OR created_at = '0000-00-00 00:00:00'")
    )
    connection.execute(
        sa.text("UPDATE users SET status = 1 WHERE status IS NULL")
    )

    # 然后将必需字段设置为不允许为空
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('real_name', nullable=False)
        batch_op.alter_column('role', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', mysql.VARCHAR(length=120), nullable=True))
        batch_op.add_column(sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))

    # 为新添加的字段设置默认值
    connection = op.get_bind()
    connection.execute(
        sa.text("UPDATE users SET email = CONCAT(username, '@example.com') WHERE email IS NULL")
    )
    connection.execute(
        sa.text("UPDATE users SET is_active = 1 WHERE is_active IS NULL")
    )

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('email', nullable=False)
        batch_op.alter_column('is_active', nullable=False)
        batch_op.create_index(batch_op.f('email'), ['email'], unique=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=80),
               existing_nullable=False)
        batch_op.drop_column('status')
        batch_op.drop_column('last_login')
        batch_op.drop_column('created_at')
        batch_op.drop_column('role')
        batch_op.drop_column('phone')
        batch_op.drop_column('real_name')

    op.drop_table('operation_logs')
    op.drop_table('navigation_settings')
    op.drop_table('navigation_points')
    op.drop_table('equipment_logs')
    op.drop_table('education_settings')
    op.drop_table('courseware')
    op.drop_table('equipment')
    op.drop_table('dashboard_statistics')
    # ### end Alembic commands ###
